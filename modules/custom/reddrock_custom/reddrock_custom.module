<?php

use Drupal\Core\Url;

/**
 * @file
 * Contains reddrock_custom.module..
 */

function reddrock_custom_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'reddrock_custom/reddrockcustom';
}

function reddrock_custom_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){

	//contact form
    if ($form['#id'] == 'contact-message-feedback-form') {
    	$form['actions']['submit']['#submit'][] = 'reddrock_custom_contact_submit';
    }

	function reddrock_custom_contact_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
		drupal_set_message('we sent a form woohoo');
		//kint($form);
		$keys = \Drupal::request()->get('keys');
		$fullpath = 'http://dev.reddrockmusic.com/home?playAudio=yes';
		$url = Url::fromUri($fullpath);
		$form_state->setRedirectUrl($url);
	}

  /**
   * Apply the form_alter to a specific form #id
   * the form #id can be found through inspecting the markup
   */
  if($form['#id'] == 'views-exposed-form-listen-page-block-1' || $form['#id'] == 'views-exposed-form-listen-page-block-2') { 

	/**
	 * Extract the options from the Views Exposed Filter <select>-list 
	 */
  $links = $form['tid']['#options'];

  /**
   * Iterate over the options ($links) to build an array ($pop_array) of links
   */
  //$i = 0; // Initiate counter/index
  $pop_array = array();
	foreach ($links as $tid => $term_name) {
		$term = taxonomy_term_load($tid);
		$weight = $term->get('weight')->value;
		if ($tid == 'All') {
			$pop_array[$weight]['#markup'] = '<span class="filter-tab"><a href="" class="active" id="' .$tid . '">' . 'See All</a></span>';
		}
		else {
			$pop_array[$weight]['#markup'] = '<span class="filter-tab"><a href="" id="' .$tid . '">' . $term_name . '</a></span>';
		}
		//$i++; // Increase counter/index
	} 
	ksort($pop_array); 
	/**
	 * Create the item-list the form should render
	 */
		$form['links'] = [
			'#theme' => 'item_list',
		  '#items' => $pop_array,
		  '#attributes' => array('class' => array('pop-list')),
		]; 
	}
  
  else {
  	//nothing...
  } 
}